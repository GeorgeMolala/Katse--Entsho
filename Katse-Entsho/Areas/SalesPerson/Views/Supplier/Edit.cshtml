@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@model Supplier
@{
    ViewBag.Title = "Register";

    string ProvincessID = " ";
    ViewBag.PRO = ProvincessID;
    <script>
        var srlProvs = "@ViewBag.Prov_s"
        var srlCities = "@ViewBag.City_s";
        var srlSuburbs = "@ViewBag.Suburb_s";
    </script>
}
<div class="illus-group-col">
    <h1 class="headline center"><span class="background_Matte">Manage Suppliers </span></h1>
    <h3 class="title">
        Sales 
    </h3>
    <br />


</div>

<h1></h1>

<div asp-validation-summary="All" class="text-danger"> </div>
<form method="post" asp-controller="Supplier" asp-action="Edit">

    <div class="form-group row">
        <div class="col-sm-9">

            <div class="col-sm-7">
                <label>Supplier Name</label>
                <input asp-for="SupplierName" class="form-control" data-toggle="tooltip" data-placement="top" title="Provide Employee Name" placeholder="Employee Name" />
            </div>
            <div class="col">
                <span asp-validation-for="SupplierName"
                      class="text-danger"></span>
            </div>
        </div>
    </div>

    <div class="form-group row">
        <div class="col-sm-9">

            <div class="col-sm-7">
                <label>Telephone </label>
                <input asp-for="ContactNumber" class="form-control" data-toggle="tooltip" data-placement="top" title="Provide Employee Surname" placeholder="Employee Surname" />
            </div>
            <div class="col">
                <span asp-validation-for="ContactNumber"
                      class="text-danger"></span>
            </div>
        </div>
    </div>



    <div class="form-group">
        <div class="col-sm-9">
            <div class="col-sm-7 row">
                <label>Email Address </label>
                <input asp-for="Email" class="form-control" data-toggle="tooltip" data-placement="top" title="Provide Employee email e.g employeeName@domain.com" placeholder="Employee Email" />
            </div>
            <div class="col">
                <span asp-validation-for="Email"
                      class="text-danger"></span>
            </div>
        </div>
    </div>




    <div class="form-group row">
        <div class="col-sm-9">

            <div class="col-sm-7">
                <label>AddressLine1 </label>
                <input asp-for="AddressLine1" class="form-control" data-toggle="tooltip" data-placement="top" title="Line 1 Address, e.g 721 Block E" placeholder="Provide Address" />
            </div>
            <div class="col">
                <span asp-validation-for="AddressLine1"
                      class="text-danger"></span>
            </div>
        </div>
    </div>


    <div class="form-group row">
        <div class="col-sm-9">

            <div class="col-sm-7">
                <label>AddressLine2 </label>
                <input asp-for="AddressLine2" class="form-control" data-toggle="tooltip" data-placement="top" title="Optional" placeholder="Provide Address" />
            </div>
            <div class="col">
                <span asp-validation-for="AddressLine2"
                      class="text-danger"></span>
            </div>
        </div>
    </div>

    <div class="row">
        @*Needs to be linked to database*@
        <div class="col-md-7">
            <div class="form-group">
                <label class="control-label">Province </label>
                <select class="form-control" id="pageProvinceElement" asp-for="ProvinceID" asp-items="@(new SelectList(ViewBag.province, "ProvinceID", "Name"))" data-toggle="tooltip" data-placement="top" title="" placeholder="Select Province">
                </select>
            </div>

            <div class="col">
                <span asp-validation-for="ProvinceID"
                      class="text-danger"></span>
            </div>
        </div>
    </div>



    <div class="row">
        @*Needs to be linked to database*@
        <div class="col-md-7">
            <div class="form-group">
                <label class="control-label">City </label>
                <select id="pageCityElement" asp-for="CityID" class="form-control" asp-items="@(new SelectList(ViewBag.cities, "CityID", "Name"))" data-toggle="tooltip" data-placement="top" title="" placeholder="Select City">
                </select>

            </div>

            <div>
                <label></label>
            </div>
            <div class="col">
                <span asp-validation-for="CityID"
                      class="text-danger"></span>
            </div>
        </div>
    </div>
    @*"@(new SelectList(ViewBag.Pronvices, "Value", "Text"))"*@

    <div class="row">
        @*Needs to be linked to database*@                    @*"@(new SelectList(ViewBag.suburbs, "SuburbID", "Name"))"*@
        <div class="col-md-7">
            <div class="form-group">
                <label class="control-label">Suburb </label>
                <select id="pageSuburbElement" asp-for="SuburbID" class="form-control" asp-items="@(new SelectList(ViewBag.suburbs, "SuburbID", "Name"))" data-toggle="tooltip" data-placement="top" title="" placeholder="Select Suburb">
                </select>
            </div>

            <div class="col">
                <span asp-validation-for="SuburbID"
                      class="text-danger"></span>
            </div>
        </div>
    </div>




    <script>
        var thisProvinces = document.getElementById('pageProvinceElement');
        var thisCities = document.getElementById('pageCityElement');
        var thisSuburbs = document.getElementById('pageSuburbElement');
        if (typeof srlProvs !== "undefined") {
            const allProvs = JSON.parse(srlProvs.replace(/&quot;/g, '"'));
            const allCities = JSON.parse(srlCities.replace(/&quot;/g, '"'));
            const allSuburbs = JSON.parse(srlSuburbs.replace(/&quot;/g, '"'));
            thisCities.innerHTML = "";
            for (var i = 0; i < allCities.length; i++) {
                var obj = allCities[i];
                let selectedProvince = thisProvinces.options[thisProvinces.selectedIndex].value;
                if (selectedProvince == obj["ProvinceID"]) {
                    let newOption = new Option(obj["Name"], obj["CityID"]);
                    thisCities.add(newOption, undefined);
                }
            }
            thisSuburbs.innerHTML = "";
            for (var i = 0; i < allSuburbs.length; i++) {
                var obj = allSuburbs[i];
                let selectedCity = thisCities.options[thisCities.selectedIndex].value;
                if (selectedCity == obj["CityID"]) {
                    let newOption = new Option(obj["Name"], obj["SuburbID"]);
                    thisSuburbs.add(newOption, undefined);
                }
            }
            if (thisProvinces) {
                thisProvinces.addEventListener("change", function () {
                    thisCities.innerHTML = "";
                    for (var i = 0; i < allCities.length; i++) {
                        var obj = allCities[i];
                        let selectedProvince = thisProvinces.options[thisProvinces.selectedIndex].value;
                        if (selectedProvince == obj["ProvinceID"]) {
                            let newOption = new Option(obj["Name"], obj["CityID"]);
                            thisCities.add(newOption, undefined);
                        }
                    }
                    thisSuburbs.innerHTML = "";
                    for (var i = 0; i < allSuburbs.length; i++) {
                        var obj = allSuburbs[i];
                        let selectedCity = thisCities.options[thisCities.selectedIndex].value;
                        if (selectedCity == obj["CityID"]) {
                            let newOption = new Option(obj["Name"], obj["SuburbID"]);
                            thisSuburbs.add(newOption, undefined);
                        }
                    }
                })
            }
            if (thisCities) {
                console.log("prov defined");
                thisCities.addEventListener("change", function () {
                    thisSuburbs.innerHTML = "";
                    for (var i = 0; i < allSuburbs.length; i++) {
                        var obj = allSuburbs[i];
                        let selectedCity = thisCities.options[thisCities.selectedIndex].value;
                        console.log(selectedCity);
                        if (selectedCity == obj["CityID"]) {
                            let newOption = new Option(obj["Name"], obj["SuburbID"]);
                            thisSuburbs.add(newOption, undefined);
                        }
                    }
                });
            }
        }</script>



    <div class="col-sm-2 align-content-end">
        <button type="submit" class="btn btn-danger" form-control>
            Save
        </button>

        <button class="btn btn-danger" asp-controller="Admin" asp-action="Index">Cancel</button>
    </div>


</form>

